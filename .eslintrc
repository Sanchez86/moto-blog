{
  "root": true,
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "airbnb",
    "airbnb-typescript",
    "airbnb/hooks",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ],
        "moduleDirectory": ["node_modules", "src/"]
      }
    },
    "react": {
      "version": "detect"
    }
  },
  "parserOptions": {
    "project": "tsconfig.eslint.json",
    "ecmaFeatures": {
      "jsx": true,
      "tsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks"
  ],
  "rules": {
    "no-param-reassign": ["error", {
      "props": true,
      "ignorePropertyModificationsFor": [
        "state"
      ]
    }],
    "jsx-a11y/label-has-associated-control": "off",
    "jsx-a11y/label-has-for": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": [
      "error"
    ],
    "no-shadow": "off",
    "react/jsx-props-no-spreading": "off",
    "import/prefer-default-export": "off",
    "camelcase": "off",
    "no-unused-expressions": "off",
    "no-nested-ternary": "off",
    "no-plusplus": "off",
    "no-undef": "off",
    "consistent-return": "off",
    "react/forbid-prop-types": "off",
    "react/no-array-index-key": "off",
    "react-hooks/exhaustive-deps": "warn",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "indent": "off",
    "semi": "off",
    "@typescript-eslint/indent": [
      "error",
      2
    ],
    "@typescript-eslint/semi": ["error"],
    "linebreak-style": [
      "error",
      "windows"
    ],
    "no-restricted-syntax": ["error", "FunctionExpression", "WithStatement", "BinaryExpression[operator='in']"],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "react/jsx-filename-extension": [
      2,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ]
  },
  "overrides": [
    {
      "files": [
        "**/*.tsx"
      ],
      "rules": {
        "react/prop-types": "off"
      }
    }
  ]
}